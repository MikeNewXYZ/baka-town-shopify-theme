<template x-teleport="body">
  <aside
    class="header-mobile-menu__wrapper"
    style="opacity: 0; pointer-events: none;"
    x-data="headerMobileMenu" 
    x-effect="openMobileMenu ? showAnimation : hideAnimation"
  >
    <div
      class="header-mobile-menu__overlay"
      x-ref="overlay"
      @click="openMobileMenu = false"
    ></div>
    
    <div
      class="header-mobile-menu__sidebar-outer border-snake"
      x-ref="sidebarOuter"
    >
      <div class="header-mobile-menu__sidebar-inner border-snake__inner bg-light shadow">
        <button
          class="header-mobile-menu__close-button btn-close btn-close-white"
          @click="openMobileMenu = false"
        ></button>

        <div class="header-mobile-menu__sidebar-heading bg-dark text-light display-6">
          <div x-ref="headingText">
            Menu
          </div>
        </div>

        <ul
          class="nav nav-pills flex-column"
          style="flex: 1; overflow-y: auto; flex-wrap: nowrap;"
          x-ref="navLinks"
        >
          {% for link in linklists.main-menu.links %}
            {% if link.links == blank %}
              <li class="nav-item">
                <a
                  {% if link.active %}
                    class="nav-link active rounded-0"
                  {% else %}
                    class="nav-link rounded-0"
                  {% endif %}
                  href="{{ link.url }}"
                >
                  {{ link.title }}
                </a>
              </li>
            {% else %}
              <li class="nav-item">
                <a
                  class="nav-link rounded-0 dropdown-toggle"
                  role="button"
                  data-bs-toggle="collapse"
                  data-bs-target="#header-mobile-menu-nav-item-child-{{ forloop.index }}"
                  aria-controls="#header-mobile-menu-nav-item-child-{{ forloop.index }}"
                >
                  {{ link.title }}
                </a>
                
                <nav
                  class="collapse"
                  id="header-mobile-menu-nav-item-child-{{ forloop.index }}"
                >
                  <ul class="nav nav-pills flex-column ps-2">
                    {% for child_link in link.links %}
                      <li class="nav-item mb-2">
                        <a
                          {% if child_link.active %}
                            class="nav-link active rounded-0 rounded-start"
                          {% else %}
                            class="nav-link rounded-0 rounded-start"
                          {% endif %}
                          href="{{ child_link.url }}"
                        >
                          - {{ child_link.title }}
                        </a>
                      </li>
                    {% endfor %}
                  </ul>
                </nav>
              </li>
            {% endif %}
          {% endfor %}
        </ul>
      </div>
    </div>
  </aside>
</template>

<script>
document.addEventListener("alpine:init", () => {
  Alpine.data("headerMobileMenu", () => ({
    showAnimation() {
      const tl = anime.timeline({
        easing: "easeInOutQuart",
        begin: () => {
          this.$el.style.pointerEvents = "auto"
          this.$el.style.opacity = "1"
        }
      })

      tl.add({
        targets: this.$refs.overlay,
        opacity: [0, 1]
      }).add({
        targets: this.$refs.sidebarOuter,
        translateX: ["-100%", "0%"]
      }, "-=500").add({
        targets: this.$refs.headingText,
        translateX: ["-100%", "0%"]
      }, "-=750").add({
        targets: this.$refs.navLinks.children,
        translateX: ["-100%", "0%"],
        delay: anime.stagger(100)
      }, "-=750")
    },
    hideAnimation() {
      const tl = anime.timeline({
        easing: "easeInOutQuart",
        duration: 750,
        begin: () => {
          this.$el.style.pointerEvents = "none"
        },
        complete: () => {
          this.$el.style.opacity = "0"
        }
      })

      tl.add({
        targets: [this.$refs.headingText, this.$refs.navLinks.children],
        translateX: ["0%", "-100%"],
        delay: anime.stagger(50)
      }).add({
        targets: this.$refs.sidebarOuter,
        translateX: ["0%", "-100%"]
      }, "-=500").add({
        targets: this.$refs.overlay,
        opacity: [1, 0]
      }, "-=500")
    }
  }))
})
</script>